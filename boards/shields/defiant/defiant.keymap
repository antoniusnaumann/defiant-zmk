#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define SYM 1
#define NUM 2
#define NAV 3
#define FUN 4

/ {
    macros {
        var_decl: var_decl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COLON &kp EQUAL>
                ;
        };

        not_eq: not_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp EXCL &kp EQUAL>
                ;

        };

        arrow_l: arrow_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LT &kp MINUS>
                ;

        };

        arrow_r: arrow_r {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT>
                ;

        };


    };
};

/ {
behaviors {
    lhm: left_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <100>;                        
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 39 40 41 42 43>;   
    };
 
     rhm: right_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <100>;                      
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 3 4 9 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38>; 
    };

    hll: hold_long {
        compatible = "zmk,behavior-hold-tap";
        label = "Hold-Tap Long";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        bindings =
            <&kp>,
            <&kp>;

        tapping-term-ms = <400>;
        quick-tap-ms = <100>;
        global-quick-tap;
    };
    hl: hold {
        compatible = "zmk,behavior-hold-tap";
        label = "Hold-Tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        bindings =
            <&kp>,
            <&kp>;

        tapping-term-ms = <300>;
        quick-tap-ms = <100>;
        global-quick-tap;
    };
    hls: hold_short {
        compatible = "zmk,behavior-hold-tap";
        label = "Hold-Tap Short";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        bindings =
            <&kp>,
            <&kp>;

        tapping-term-ms = <200>;
        quick-tap-ms = <100>;
        global-quick-tap;
    };

    combos {
        compatible = "zmk,combos";

        reset_right {
            bindings = <&bootloader>;
            key-positions = <16 28 43>;
            // layers = <0 2>;
        };

        reset_left {
            bindings = <&bootloader>;
            key-positions = <15 27 34>;
        };
    };

};

keymap {
    compatible = "zmk,keymap";

    default_layer {
        bindings = <
        &kp LBKT  &kp W     &kp F     &kp P   &kp B                             &kp J     &kp L     &kp U     &kp Y     &kp RBKT  
        &hll LCTRL A &hll LALT R &hll LGUI S &hls LSHFT T &kp G  &to NUM &to NAV &kp M &hls RSHFT N &hll RGUI E &hll LALT I     &hll LCTRL O 
        &kp COMMA &kp X     &kp C     &kp D   &kp V 	  &kp DEL   &to FUN   &kp K     &kp H     &kp Z     &kp DOT   &kp Q 
                  &kp LALT  &kp DEL   &kp TAB &lt NAV SPACE &sl SYM &sl SYM   &lt NUM RET &kp BSPC  &kp ESC   &kp RALT
        >;
    };

    // TODO: Add layer for umlauts

    symbol_layer {
        bindings = <
        &kp STAR  &kp HASH  &kp LBKT &kp RBKT  &kp DOLLAR                    &kp PRCNT &kp GT    &kp LT    &kp EQUAL &kp PLUS
        &kp COLON &kp UNDER &kp LPAR &kp DQT   &kp FSLH  &arrow_l   &arrow_r &kp AMPS  &kp SQT   &kp LBRC  &kp MINUS &kp SEMI 
        &kp TILDE &kp AT    &kp RPAR &kp QMARK &kp BSLH  &var_decl  &not_eq  &kp PIPE  &kp EXCL  &kp RBRC  &kp CARET &kp GRAVE 
                  &kp LALT  &kp DEL  &kp TAB   &kp SPACE &sl  SYM     &sl  SYM   &kp RET   &kp BSPC  &kp ESC   &kp RALT
        >;
    };

    // TODO: Add layer for additional symbols supported by macos

    number_layer {
        bindings = <
        &kp STAR  &kp N7    &kp N8    &kp N9    &kp PLUS                   &kp PRCNT &kp GT    &kp LT    &kp EQUAL &kp RBKT
        &kp N0    &kp N4    &kp N5    &kp N6    &kp DOT &to DEF &kp  RCTRL &kp FSLH  &mt RSHFT EQUAL &mt RGUI PLUS &mt RALT MINUS &mt RCTRL STAR 
        &kp FSLH  &kp N1    &kp N2    &kp N3    &kp MINUS &kp  DEL   &kp  RALT  &kp DLLR  &kp LPAR  &kp RPAR  &kp DOT   &kp COMMA 
                  &kp LGUI  &kp DEL   &kp TAB   &kp SPACE &sl  SYM   &sl  SYM   &kp RET   &kp BSPC  &to DEF   &kp RGUI
        >;

    };

    navigation_layer {
        bindings = <
        &out OUT_TOG &kp W &kp F &kp P &kp B                           &kp C_PP &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   
        &kp LCTRL &kp LALT   &kp LGUI  &kp LSHIFT &kp ESC &bt BT_NXT  &kp C_BRI_UP &kp ESC &kp LEFT &kp DOWN  &kp UP    &kp RIGHT 
        &kp COMMA &kp X      &kp C     &kp D      &kp V   &bt BT_PRV  &kp C_BRI_DN &kp INS &kp HOME &kp PG_DN &kp PG_UP &kp END 
                  &bt BT_CLR &kp DEL   &kp TAB  &kp SPACE &sl SYM     &sl SYM   &lt NUM RET &kp BSPC  &to DEF   &kp RALT
        >;
    };

    function_layer {
        bindings = <
        &none   &kp F7    &kp F8  &kp P   &none                               &none       &none     &none    &none    &none  
        &kp F10 &kp F4    &kp F5  &kp F6  &kp F11       &to NUM     &to NAV   &kp M       &kp RSHFT &kp RGUI &kp RALT &kp LCTRL
        &none   &kp F1    &kp F2  &kp F3  &kp F12       &kp DEL     &to DEF   &none       &none     &none    &none    &none 
                &kp LALT  &kp DEL &kp TAB &lt NAV SPACE &sl SYM     &sl SYM   &lt NUM RET &kp BSPC  &to DEF  &kp RALT
        >;
    };


};

};
